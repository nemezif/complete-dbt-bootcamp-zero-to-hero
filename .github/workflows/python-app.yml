# This workflow will install Python dependencies, run tests and lint with a single version of Python
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-python

name: Test App

on:
  push:
    branches: [ "**" ]
  pull_request:
    branches: [ "**" ]
  workflow_dispatch:
  schedule:
    - cron: '0 1 * * *'  # 2 AM CET (1 AM UTC)

permissions:
  contents: read

jobs:
  build:
    if: github.repository == 'nordquant/complete-dbt-bootcamp-zero-to-hero'
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: ["3.12", "3.11", "3.10", "3.9"]
        runs-on: [ubuntu-latest, ubuntu-latest-arm64]
    env:
      full_test_python: "3.12"
    steps:
    - uses: actions/checkout@v3
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v3
      with:
        python-version: ${{ matrix.python-version }}
    - name: Cache pip dependencies
      uses: actions/cache@v3
      with:
        path: ~/.cache/pip
        key: ${{ runner.os }}-pip-${{ hashFiles('**/requirements.txt') }}
        restore-keys: |
          ${{ runner.os }}-pip-
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        if [ -f requirements.txt ]; then pip install -r requirements.txt; fi
    - name: Create dbt profile
      env:
        PROFILES_YML: ${{ secrets.PROFILES_YML }}
      run: |
        mkdir -p ~/.dbt
        echo "$PROFILES_YML" > ~/.dbt/profiles.yml
    - name: Execute dbt debug
      run: |
        cd airbnb
        dbt debug
    - name: Install packages
      run: |
        cd airbnb
        dbt deps
    - name: dbt build
      if: matrix.python-version == env.full_test_python && matrix.runs-on == 'ubuntu-latest'
      run: |
        cd airbnb
        dbt build
    - name: dbt docs generate
      if: matrix.python-version == env.full_test_python && matrix.runs-on == 'ubuntu-latest'
      run: |
        cd airbnb
        dbt docs generate
    - name: Install dbt fusion
      if: matrix.python-version == env.full_test_python && matrix.runs-on == 'ubuntu-latest'
      run: |
        curl -fsSL https://public.cdn.getdbt.com/fs/install/install.sh | sh -s -- --update
    - name: dbtf build (Fusion) 
      if: matrix.python-version == env.full_test_python && matrix.runs-on == 'ubuntu-latest'
      run: |
        cd airbnb
        /home/runner/.local/bin/dbt build

